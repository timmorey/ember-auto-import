{"version":3,"file":"splitter-test.js","sourceRoot":"","sources":["../../ts/tests/splitter-test.ts"],"names":[],"mappings":"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","sourcesContent":["import QUnit from 'qunit';\nimport 'qunit-assertions-extra';\nimport broccoli, { Builder } from 'broccoli';\nimport { UnwatchedDir } from 'broccoli-source';\nimport { outputFileSync } from 'fs-extra';\nimport { join } from 'path';\nimport Package, { Options } from '../package';\nimport Analyzer from '../analyzer';\nimport Splitter from '../splitter';\nimport BundleConfig from '../bundle-config';\nimport { Project } from 'scenario-tester';\nimport { merge } from 'lodash';\nimport { AddonInstance, AppInstance, Project as EmberCLIProject } from '@embroider/shared-internals';\n// @ts-ignore\nimport broccoliBabel from 'broccoli-babel-transpiler';\n\nconst { module: Qmodule, test } = QUnit;\n\nQmodule('splitter', function (hooks) {\n  let builder: Builder;\n  let project: Project;\n  let pack: Package;\n  let splitter: Splitter;\n  let setup: (options?: Options) => void;\n\n  hooks.beforeEach(function (this: any) {\n    project = new Project('my-app');\n    let alpha = project.addDependency('alpha');\n    merge(alpha.files, {\n      'index.js': '',\n      mod: {\n        'index.js': '',\n      },\n    });\n    let beta = project.addDependency('@beta/thing');\n    merge(beta.files, {\n      'index.js': '',\n      mod: {\n        'index.js': '',\n      },\n    });\n\n    project.addDevDependency('aliasing-example', {\n      files: {\n        'outside.js': `export default function() {}`,\n        dist: {\n          'inside.js': `export default function() {}`,\n          'index.js': `export default function() {}`,\n        },\n      },\n    });\n\n    project.writeSync();\n\n    setup = function (options: Options = {}) {\n      pack = new Package(stubAddonInstance(project.baseDir, options));\n      let transpiled = broccoliBabel(new UnwatchedDir(project.baseDir), {\n        plugins: [\n          require.resolve('../../js/analyzer-plugin'),\n          require.resolve('@babel/plugin-syntax-typescript'),\n\n          // keeping this in non-parallelizable form prevents\n          // broccoli-babel-transpiler from spinning up separate worker processes,\n          // which we don't want or need and which hang at the end of the test\n          // suite.\n          require('../../babel-plugin'),\n        ],\n      });\n      let analyzer = new Analyzer(transpiled, pack, undefined, true);\n      splitter = new Splitter({\n        bundles: new BundleConfig({\n          vendor: {\n            js: 'assets/vendor.js',\n            css: 'assetes/vendor.css',\n          },\n          app: {\n            html: 'index.html',\n          },\n        }),\n        analyzers: new Map([[analyzer, pack]]),\n      });\n      builder = new broccoli.Builder(analyzer);\n    };\n\n    setup();\n  });\n\n  hooks.afterEach(function (this: any) {\n    if (builder) {\n      return builder.cleanup();\n    }\n    project.dispose();\n  });\n\n  type Example = [\n    string,\n    { specifier: string; packageName: string } | { quasis: string[]; expressions: string[]; packageName: string }\n  ];\n\n  let handledImportCallExamples: Example[] = [\n    [\"'alpha'\", { specifier: 'alpha', packageName: 'alpha' }],\n    [\"'@beta/thing'\", { specifier: '@beta/thing', packageName: '@beta/thing' }],\n    ['`alpha`', { specifier: 'alpha', packageName: 'alpha' }],\n    ['`@beta/thing`', { specifier: '@beta/thing', packageName: '@beta/thing' }],\n    [\"'alpha/mod'\", { specifier: 'alpha/mod', packageName: 'alpha' }],\n    [\"'@beta/thing/mod'\", { specifier: '@beta/thing/mod', packageName: '@beta/thing' }],\n    ['`alpha/mod`', { specifier: 'alpha/mod', packageName: 'alpha' }],\n    ['`@beta/thing/mod`', { specifier: '@beta/thing/mod', packageName: '@beta/thing' }],\n    ['`alpha/${foo}`', { quasis: ['alpha/', ''], expressions: ['foo'], packageName: 'alpha' }],\n    ['`alpha/in${foo}`', { quasis: ['alpha/in', ''], expressions: ['foo'], packageName: 'alpha' }],\n    ['`@beta/thing/${foo}`', { quasis: ['@beta/thing/', ''], expressions: ['foo'], packageName: '@beta/thing' }],\n    ['`@beta/thing/in${foo}`', { quasis: ['@beta/thing/in', ''], expressions: ['foo'], packageName: '@beta/thing' }],\n    ['`alpha/${foo}/component`', { quasis: ['alpha/', '/component'], expressions: ['foo'], packageName: 'alpha' }],\n    [\n      '`@beta/thing/${foo}/component`',\n      { quasis: ['@beta/thing/', '/component'], expressions: ['foo'], packageName: '@beta/thing' },\n    ],\n    [\n      '`alpha/${foo}/component/${bar}`',\n      { quasis: ['alpha/', '/component/', ''], expressions: ['foo', 'bar'], packageName: 'alpha' },\n    ],\n    [\n      '`@beta/thing/${foo}/component/${bar}`',\n      { quasis: ['@beta/thing/', '/component/', ''], expressions: ['foo', 'bar'], packageName: '@beta/thing' },\n    ],\n  ];\n\n  for (let example of handledImportCallExamples) {\n    let [arg] = example;\n    test(`handled dynamic example: import(${arg})`, async function (assert) {\n      outputFileSync(join(project.baseDir, 'sample.js'), `import(${arg})`);\n      await builder.build();\n      let deps = await splitter.deps();\n      assert.deepEqual([...deps.keys()], ['app', 'tests']);\n      assert.deepEqual(deps.get('app')?.staticImports, []);\n      assert.deepEqual(deps.get('app')?.staticTemplateImports, []);\n      if ('quasis' in example[1]) {\n        assert.deepEqual(deps.get('app')?.dynamicImports, []);\n        let dynamicTemplateImports = deps.get('app')?.dynamicTemplateImports;\n        assert.equal(dynamicTemplateImports?.length, 1);\n        assert.deepEqual(dynamicTemplateImports?.[0].cookedQuasis, example[1].quasis);\n        assert.deepEqual(dynamicTemplateImports?.[0].expressionNameHints, example[1].expressions);\n        assert.equal(dynamicTemplateImports?.[0].packageName, example[1].packageName);\n        assert.equal(\n          dynamicTemplateImports?.[0].packageRoot,\n          join(project.baseDir, 'node_modules', example[1].packageName)\n        );\n      } else {\n        assert.deepEqual(deps.get('app')?.dynamicTemplateImports, []);\n        let dynamicImports = deps.get('app')?.dynamicImports;\n        assert.equal(dynamicImports?.length, 1);\n        assert.equal(dynamicImports?.[0].specifier, example[1].specifier);\n        assert.equal(dynamicImports?.[0].packageName, example[1].packageName);\n        assert.equal(dynamicImports?.[0].packageRoot, join(project.baseDir, 'node_modules', example[1].packageName));\n      }\n    });\n  }\n\n  for (let example of handledImportCallExamples) {\n    let [arg] = example;\n    test(`handled import example: importSync(${arg})`, async function (assert) {\n      outputFileSync(\n        join(project.baseDir, 'sample.js'),\n        `import { importSync } from '@embroider/macros'; importSync(${arg})`\n      );\n      await builder.build();\n      let deps = await splitter.deps();\n      assert.deepEqual([...deps.keys()], ['app', 'tests']);\n      assert.deepEqual(deps.get('app')?.dynamicImports, []);\n      assert.deepEqual(deps.get('app')?.dynamicTemplateImports, []);\n      if ('quasis' in example[1]) {\n        assert.deepEqual(deps.get('app')?.staticImports, []);\n        let staticTemplateImports = deps.get('app')?.staticTemplateImports;\n        assert.equal(staticTemplateImports?.length, 1);\n        assert.deepEqual(staticTemplateImports?.[0].cookedQuasis, example[1].quasis);\n        assert.deepEqual(staticTemplateImports?.[0].expressionNameHints, example[1].expressions);\n        assert.equal(staticTemplateImports?.[0].packageName, example[1].packageName);\n        assert.equal(\n          staticTemplateImports?.[0].packageRoot,\n          join(project.baseDir, 'node_modules', example[1].packageName)\n        );\n      } else {\n        assert.deepEqual(deps.get('app')?.staticTemplateImports, []);\n        let staticImports = deps.get('app')?.staticImports;\n        assert.equal(staticImports?.length, 1);\n        assert.equal(staticImports?.[0].specifier, example[1].specifier);\n        assert.equal(staticImports?.[0].packageName, example[1].packageName);\n        assert.equal(staticImports?.[0].packageRoot, join(project.baseDir, 'node_modules', example[1].packageName));\n      }\n    });\n  }\n\n  let safeURLExamples = [\n    \"import('http://example.com/')\",\n    \"import('https://example.com/')\",\n    \"import('https://example.com/thing')\",\n    \"import('//example.com/thing')\",\n    'import(`http://${which}`)',\n    'import(`https://${which}`)',\n    'import(`//${which}`)',\n    'import(`http://${which}/rest`)',\n    'import(`https://${which}/rest`)',\n    'import(`//${which}/rest`)',\n    'import(`data:application/javascript;base64,ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7IHJldHVybiAxIH0=`)',\n    'import(`data:application/javascript;base64,${code}`)',\n  ];\n  for (let src of safeURLExamples) {\n    test(`safe url example: ${src}`, async function (assert) {\n      outputFileSync(join(project.baseDir, 'sample.js'), src);\n      await builder.build();\n      let deps = await splitter.deps();\n      assert.deepEqual([...deps.keys()], ['app', 'tests']);\n      assert.deepEqual(deps.get('app'), {\n        staticImports: [],\n        staticTemplateImports: [],\n        dynamicImports: [],\n        dynamicTemplateImports: [],\n      });\n    });\n  }\n\n  test('disallowed patttern: partial package', async function (assert) {\n    assert.expect(1);\n    let src = 'import(`lo${dash}`)';\n    outputFileSync(join(project.baseDir, 'sample.js'), src);\n    await builder.build();\n    try {\n      await splitter.deps();\n      throw new Error(`expected not to get here, build was supposed to fail`);\n    } catch (err) {\n      assert.contains(err.message, 'Dynamic imports must target unambiguous package names');\n    }\n  });\n\n  test('disallowed patttern: partial namespaced package', async function (assert) {\n    assert.expect(1);\n    let src = 'import(`@foo/${dash}`)';\n    outputFileSync(join(project.baseDir, 'sample.js'), src);\n    await builder.build();\n    try {\n      await splitter.deps();\n      throw new Error(`expected not to get here, build was supposed to fail`);\n    } catch (err) {\n      assert.contains(err.message, 'Dynamic imports must target unambiguous package names');\n    }\n  });\n\n  test('dynamic relative imports are forbidden', async function (assert) {\n    assert.expect(1);\n    let src = \"import('./thing')\";\n    outputFileSync(join(project.baseDir, 'sample.js'), src);\n    await builder.build();\n    try {\n      await splitter.deps();\n      throw new Error(`expected not to get here, build was supposed to fail`);\n    } catch (err) {\n      assert.contains(\n        err.message,\n        `ember-auto-import does not support dynamic relative imports. \"./thing\" is relative. To make this work, you need to upgrade to Embroider.`\n      );\n    }\n  });\n\n  test('dynamic template relative imports are forbidden', async function (assert) {\n    assert.expect(1);\n    let src = 'import(`./thing/${foo}`)';\n    outputFileSync(join(project.baseDir, 'sample.js'), src);\n    await builder.build();\n    try {\n      await splitter.deps();\n      throw new Error(`expected not to get here, build was supposed to fail`);\n    } catch (err) {\n      assert.contains(\n        err.message,\n        `ember-auto-import does not support dynamic relative imports. \"./thing/\" is relative. To make this work, you need to upgrade to Embroider.`\n      );\n    }\n  });\n\n  test('exact alias remaps package name and root', async function (assert) {\n    setup({\n      alias: {\n        'my-aliased-package$': 'aliasing-example/dist/index.js',\n      },\n    });\n\n    let src = `import x from 'my-aliased-package';`;\n    outputFileSync(join(project.baseDir, 'sample.js'), src);\n    await builder.build();\n    let deps = await splitter.deps();\n    assert.deepEqual(\n      deps.get('app')?.staticImports.map(i => ({\n        packageName: i.packageName,\n        packageRoot: i.packageRoot,\n        specifier: i.specifier,\n      })),\n      [\n        {\n          packageName: 'aliasing-example',\n          packageRoot: join(project.baseDir, 'node_modules', 'aliasing-example'),\n          specifier: 'my-aliased-package',\n        },\n      ]\n    );\n  });\n\n  test('prefix alias remaps package name and root', async function (assert) {\n    setup({\n      alias: {\n        'my-aliased-package': 'aliasing-example/dist',\n      },\n    });\n\n    let src = `import x from 'my-aliased-package/inside';`;\n    outputFileSync(join(project.baseDir, 'sample.js'), src);\n    await builder.build();\n    let deps = await splitter.deps();\n    assert.deepEqual(\n      deps.get('app')?.staticImports.map(i => ({\n        packageName: i.packageName,\n        packageRoot: i.packageRoot,\n        specifier: i.specifier,\n      })),\n      [\n        {\n          packageName: 'aliasing-example',\n          packageRoot: join(project.baseDir, 'node_modules', 'aliasing-example'),\n          specifier: 'my-aliased-package/inside',\n        },\n      ]\n    );\n  });\n\n  test('aliasing within same package leaves packageRoot and packageName unchanged', async function (assert) {\n    setup({\n      alias: {\n        'aliasing-example': 'aliasing-example/dist',\n      },\n    });\n\n    let src = `import x from 'aliasing-example';`;\n    outputFileSync(join(project.baseDir, 'sample.js'), src);\n    await builder.build();\n    let deps = await splitter.deps();\n    assert.deepEqual(\n      deps.get('app')?.staticImports.map(i => ({\n        packageName: i.packageName,\n        packageRoot: i.packageRoot,\n        specifier: i.specifier,\n      })),\n      [\n        {\n          packageName: 'aliasing-example',\n          packageRoot: join(project.baseDir, 'node_modules', 'aliasing-example'),\n          specifier: 'aliasing-example',\n        },\n      ]\n    );\n  });\n});\n\nfunction stubAddonInstance(baseDir: string, autoImport: Options): AddonInstance {\n  let project: EmberCLIProject = {\n    root: baseDir,\n    targets: {},\n    ui: {} as any,\n    pkg: require(join(baseDir, 'package.json')),\n    addons: [\n      {\n        name: 'ember-cli-babel',\n        pkg: { version: '7.0.0' },\n        buildBabelOptions() {\n          return {\n            plugins: [require.resolve('../../babel-plugin')],\n          };\n        },\n      } as any,\n    ],\n    name() {\n      return 'my-project';\n    },\n  };\n  let app: AppInstance = {\n    env: 'development',\n    project,\n    options: {\n      autoImport,\n    },\n    addonPostprocessTree: {} as any,\n  };\n  return {\n    name: 'ember-auto-import',\n    parent: project,\n    project,\n    app,\n    pkg: { name: 'ember-auto-import', version: '0.0.0' },\n    root: '/fake',\n    options: {},\n    addons: [],\n    treeGenerator() {\n      throw new Error('unimplemnented');\n    },\n    _super: undefined,\n    _findHost() {\n      throw new Error('unimplemented');\n    },\n  };\n}\n"]}