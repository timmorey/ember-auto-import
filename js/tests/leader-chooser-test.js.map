{"version":3,"file":"leader-chooser-test.js","sourceRoot":"","sources":["../../ts/tests/leader-chooser-test.ts"],"names":[],"mappings":";;;;;AAAA,kDAA0B;AAC1B,kCAAgC;AAGhC,sCAA0C;AAE1C,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,eAAK,CAAC;AAExC,MAAM,WAAW;IACf,YAAmB,GAA8D;QAA9D,QAAG,GAAH,GAAG,CAA2D;IAAG,CAAC;IAErF,SAAS,CAAC,IAAY,EAAE,OAAO,GAAG,OAAO;QACvC,OAAO,IAAI,SAAS,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAyC,CAAC;IAC1F,CAAC;CACF;AAED,MAAM,SAAS;IAGb,YACS,IAAY,EACnB,OAAe,EACR,MAA+B,EAC/B,OAAoB;QAHpB,SAAI,GAAJ,IAAI,CAAQ;QAEZ,WAAM,GAAN,MAAM,CAAyB;QAC/B,YAAO,GAAP,OAAO,CAAa;QAE3B,IAAI,CAAC,GAAG,GAAG,EAAE,OAAO,EAAE,CAAC;IACzB,CAAC;IAED,SAAS,CAAC,IAAY,EAAE,OAAO,GAAG,OAAO;QACvC,OAAO,IAAI,SAAS,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAyC,CAAC;IAClG,CAAC;CACF;AAED,OAAO,CAAC,gBAAgB,EAAE;IACxB,IAAI,CAAC,6CAA6C,EAAE,UAAU,MAAM;QAClE,IAAI,OAAO,GAAG,IAAI,WAAW,CAAC;YAC5B,IAAI,EAAE,YAAY;YAClB,eAAe,EAAE;gBACf,mBAAmB,EAAE,QAAQ;aAC9B;SACF,CAAC,CAAC;QACH,IAAI,WAAW,GAAG,OAAO,CAAC,SAAS,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;QAClE,IAAI,aAAa,GAAG,OAAO,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;QAE9F,sBAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,SAAkC,CAAC,CAAC;QAC/F,sBAAa,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE,CAAC,WAAoC,CAAC,CAAC;QACrG,MAAM,CAAC,KAAK,CAAC,sBAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,8CAA8C,EAAE,UAAU,MAAM;QACnE,IAAI,OAAO,GAAG,IAAI,WAAW,CAAC;YAC5B,IAAI,EAAE,YAAY;YAClB,eAAe,EAAE;gBACf,mBAAmB,EAAE,QAAQ;aAC9B;SACF,CAAC,CAAC;QACH,IAAI,WAAW,GAAG,OAAO,CAAC,SAAS,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;QAClE,IAAI,aAAa,GAAG,OAAO,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;QAE9F,sBAAa,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE,CAAC,WAAoC,CAAC,CAAC;QACrG,sBAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,SAAkC,CAAC,CAAC;QAC/F,MAAM,CAAC,KAAK,CAAC,sBAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,gCAAgC,EAAE,UAAU,MAAM;QACrD,IAAI,OAAO,GAAG,IAAI,WAAW,CAAC;YAC5B,IAAI,EAAE,YAAY;YAClB,eAAe,EAAE;gBACf,mBAAmB,EAAE,QAAQ;aAC9B;SACF,CAAC,CAAC;QACH,IAAI,WAAW,GAAG,OAAO,CAAC,SAAS,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;QAClE,IAAI,aAAa,GAAG,OAAO,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;QAE9F,sBAAa,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE,CAAC,WAAoC,CAAC,CAAC;QACrG,sBAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,SAAkC,CAAC,CAAC;QAC/F,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE;YACjB,sBAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC;QACxC,CAAC,EAAE,0EAA0E,CAAC,CAAC;IACjF,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,iCAAiC,EAAE,UAAU,MAAM;QACtD,IAAI,OAAO,GAAG,IAAI,WAAW,CAAC;YAC5B,IAAI,EAAE,YAAY;YAClB,eAAe,EAAE;gBACf,mBAAmB,EAAE,QAAQ;aAC9B;SACF,CAAC,CAAC;QACH,IAAI,WAAW,GAAG,OAAO,CAAC,SAAS,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;QAClE,IAAI,aAAa,GAAG,OAAO,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;QAE/F,sBAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,SAAkC,CAAC,CAAC;QAC/F,sBAAa,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE,CAAC,WAAoC,CAAC,CAAC;QACrG,MAAM,CAAC,KAAK,CAAC,sBAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,2CAA2C,EAAE,UAAU,MAAM;QAChE,IAAI,OAAO,GAAG,IAAI,WAAW,CAAC;YAC5B,IAAI,EAAE,YAAY;YAClB,eAAe,EAAE;gBACf,mBAAmB,EAAE,OAAO;aAC7B;SACF,CAAC,CAAC;QACH,IAAI,WAAW,GAAG,OAAO,CAAC,SAAS,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;QAClE,IAAI,aAAa,GAAG,OAAO,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;QAC9F,IAAI,cAAc,GAAG,OAAO,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;QAEhG,sBAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,SAAkC,CAAC,CAAC;QAC/F,sBAAa,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE,CAAC,WAAoC,CAAC,CAAC;QACrG,sBAAa,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE,CAAC,aAAsC,CAAC,CAAC;QAEzG,MAAM,CAAC,KAAK,CAAC,sBAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import QUnit from 'qunit';\nimport 'qunit-assertions-extra';\nimport type AutoImport from '../auto-import';\nimport { AddonInstance } from '@embroider/shared-internals';\nimport { LeaderChooser } from '../leader';\n\nconst { module: Qmodule, test } = QUnit;\n\nclass FakeProject {\n  constructor(public pkg: { name: string; devDependencies: Record<string, string> }) {}\n\n  fakeAddon(name: string, version = '1.0.0'): AddonInstance & FakeAddon {\n    return new FakeAddon(name, version, this, this) as unknown as AddonInstance & FakeAddon;\n  }\n}\n\nclass FakeAddon {\n  pkg: { version: string };\n\n  constructor(\n    public name: string,\n    version: string,\n    public parent: FakeProject | FakeAddon,\n    public project: FakeProject\n  ) {\n    this.pkg = { version };\n  }\n\n  fakeAddon(name: string, version = '1.0.0'): AddonInstance & FakeAddon {\n    return new FakeAddon(name, version, this, this.project) as unknown as AddonInstance & FakeAddon;\n  }\n}\n\nQmodule('leader-chooser', function () {\n  test('compatible version registered first can win', function (assert) {\n    let project = new FakeProject({\n      name: 'sample-app',\n      devDependencies: {\n        'ember-auto-import': '^2.0.0',\n      },\n    });\n    let appInstance = project.fakeAddon('ember-auto-import', '2.0.0');\n    let addonInstance = project.fakeAddon('intermediate').fakeAddon('ember-auto-import', '2.0.1');\n\n    LeaderChooser.for(appInstance).register(appInstance, () => 'app won' as unknown as AutoImport);\n    LeaderChooser.for(addonInstance).register(addonInstance, () => 'addon won' as unknown as AutoImport);\n    assert.equal(LeaderChooser.for(appInstance).leader, 'addon won');\n  });\n\n  test('compatible version registered second can win', function (assert) {\n    let project = new FakeProject({\n      name: 'sample-app',\n      devDependencies: {\n        'ember-auto-import': '^2.0.0',\n      },\n    });\n    let appInstance = project.fakeAddon('ember-auto-import', '2.0.0');\n    let addonInstance = project.fakeAddon('intermediate').fakeAddon('ember-auto-import', '2.0.1');\n\n    LeaderChooser.for(addonInstance).register(addonInstance, () => 'addon won' as unknown as AutoImport);\n    LeaderChooser.for(appInstance).register(appInstance, () => 'app won' as unknown as AutoImport);\n    assert.equal(LeaderChooser.for(appInstance).leader, 'addon won');\n  });\n\n  test('1.x version in app is an error', function (assert) {\n    let project = new FakeProject({\n      name: 'sample-app',\n      devDependencies: {\n        'ember-auto-import': '^2.0.0',\n      },\n    });\n    let appInstance = project.fakeAddon('ember-auto-import', '1.0.0');\n    let addonInstance = project.fakeAddon('intermediate').fakeAddon('ember-auto-import', '2.0.1');\n\n    LeaderChooser.for(addonInstance).register(addonInstance, () => 'addon won' as unknown as AutoImport);\n    LeaderChooser.for(appInstance).register(appInstance, () => 'app won' as unknown as AutoImport);\n    assert.throws(() => {\n      LeaderChooser.for(appInstance).leader;\n    }, /To use these addons, your app needs ember-auto-import >= 2: intermediate/);\n  });\n\n  test('1.x version in addon is ignored', function (assert) {\n    let project = new FakeProject({\n      name: 'sample-app',\n      devDependencies: {\n        'ember-auto-import': '^2.0.0',\n      },\n    });\n    let appInstance = project.fakeAddon('ember-auto-import', '2.0.0');\n    let addonInstance = project.fakeAddon('intermediate').fakeAddon('ember-auto-import', '1.10.1');\n\n    LeaderChooser.for(appInstance).register(appInstance, () => 'app won' as unknown as AutoImport);\n    LeaderChooser.for(addonInstance).register(addonInstance, () => 'addon won' as unknown as AutoImport);\n    assert.equal(LeaderChooser.for(appInstance).leader, 'app won');\n  });\n\n  test('newer non-compatible version does not win', function (assert) {\n    let project = new FakeProject({\n      name: 'sample-app',\n      devDependencies: {\n        'ember-auto-import': '2.1.x',\n      },\n    });\n    let appInstance = project.fakeAddon('ember-auto-import', '2.1.0');\n    let addonInstance = project.fakeAddon('intermediate').fakeAddon('ember-auto-import', '2.1.4');\n    let tooNewInstance = project.fakeAddon('intermediate2').fakeAddon('ember-auto-import', '2.2.0');\n\n    LeaderChooser.for(appInstance).register(appInstance, () => 'app won' as unknown as AutoImport);\n    LeaderChooser.for(addonInstance).register(addonInstance, () => 'addon won' as unknown as AutoImport);\n    LeaderChooser.for(tooNewInstance).register(tooNewInstance, () => 'too new won' as unknown as AutoImport);\n\n    assert.equal(LeaderChooser.for(appInstance).leader, 'addon won');\n  });\n});\n"]}